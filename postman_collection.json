{
	"info": {
		"_postman_id": "092317ed-a4f7-4a80-bca5-87cde0d5724c",
		"name": "Testes_Getren",
		"description": "# Testes do backend GETREN",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register Correto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Register -> Correct', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"pm.test('Register -> Cookie', function() {\r",
							"    pm.cookies.has('user_token')\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"getren.xp@gmail.com\",\n    \"password\": \"12345678\",\n    \"password_confirm\": \"12345678\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/register",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Email Cadastrado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Register -> Email Already Registered', function() {\r",
							"    pm.response.to.have.status(400)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"getren.xp@gmail.com\",\n    \"password\": \"12345678\",\n    \"password_confirm\": \"12345678\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/register",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Give Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/give_admin",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"give_admin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Senha Pequena e Email Inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Register -> Short Password / Invalid Email', function() {\r",
							"    pm.response.to.have.status(400)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"primeirotestepostmangmail.com\",\n    \"password\": \"123\",\n    \"password_confirm\": \"132\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/register",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Sem Senha e Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Register -> No Password / No Email', function() {\r",
							"    pm.response.to.have.status(400)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"\",\n    \"password\": \"\",\n    \"password_confirm\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/register",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Usuario Cadastrado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Login -> Correct', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"pm.test('Login -> Cookie', function() {\r",
							"    pm.cookies.has('user_token')\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"getren.xp@gmail.com\",\n    \"password\": \"12345678\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/login",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Email Incorreto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Login -> Incorrect Email', function() {\r",
							"    pm.response.to.have.status(400)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"getren.xp@gmail\",\n    \"password\": \"12345678\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/login",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Senha Incorreta",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Login -> Incorrect Password', function() {\r",
							"    pm.response.to.have.status(400)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"getren.xp@gmail.com\",\n    \"password\": \"1\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/login",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirmation Confirmed True",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Confirmation True -> Incorrect Token', function() {\r",
							"    pm.response.to.have.status(400)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"getren.xp@gmail.com\",\n    \"token\": \"\",\n    \"confirmed\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/confirmation",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"confirmation"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirmation Sem Confirmação com Email Inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Confirmation False -> Unregistered User', function() {\r",
							"    pm.response.to.have.status(500)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"primeirotestepostman@gmail.com\",\n    \"token\": \"\",\n    \"confirmed\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/confirmation",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"confirmation"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirmation Sem Confirmação com Email Valido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Confirmation False -> Valid Email', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"getren.xp@gmail.com\",\n    \"token\": \"\",\n    \"confirmed\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/confirmation",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"confirmation"
					]
				}
			},
			"response": []
		},
		{
			"name": "Confirmation Confirmed True Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Confirmation True -> Correct Token', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"getren.xp@gmail.com\",\n    \"token\": \"604d7208992bfddf9d08108f4a17c0ae78de70a8b5be973fd3e613c34460a2e55b32e6b6383d7630920267ce0d008e58\",\n    \"confirmed\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/confirmation",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"confirmation"
					]
				}
			},
			"response": []
		},
		{
			"name": "ForgotPassword Email Inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Forgot Password -> Unregistered User', function() {\r",
							"    pm.response.to.have.status(500)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"testeemailinvalido@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/password_forgot",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"password_forgot"
					]
				}
			},
			"response": []
		},
		{
			"name": "RedefinePassword Token Correto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Redefine Password -> Correct Token', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"getren.xp@gmail.com\",\n    \"password\": \"1234567890\",\n    \"password_confirmed\": \"1234567890\",\n    \"token\": \"604d7208992bfddf9d08108f4a17c0ae78de70a8b5be973fd3e613c34460a2e55b32e6b6383d7630920267ce0d008e58\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/redefine_password",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"redefine_password"
					]
				}
			},
			"response": []
		},
		{
			"name": "RedefinePassword Token Incorreto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Redefine Password -> Incorrect Token', function() {\r",
							"    pm.response.to.have.status(400)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"getren.xp@gmail.com\",\n    \"password\": \"1234567890\",\n    \"password_confirmed\": \"1234567890\",\n    \"token\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/redefine_password",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"redefine_password"
					]
				}
			},
			"response": []
		},
		{
			"name": "RedefinePassword Email Inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Redefine Password -> Unregistered User', function() {\r",
							"    pm.response.to.have.status(500)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"testeemailinvalido@gmail.com\",\n    \"password\": \"1234567890\",\n    \"password_confirmed\": \"1234567890\",\n    \"token\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/redefine_password",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"redefine_password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dados Atualizados com Sucesso",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Update Data -> Correct', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Alfredo Homem de Ouro\",\n    \"birthdate\": \"1963-10-10\",\n    \"city\": \"São Paulo\",\n    \"federal_state\": \"SP\",\n    \"job\": \"Cientista da Computação\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/users/1",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dados Não Atualizados",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Update Data -> Unregistered User', function() {\r",
							"    pm.response.to.have.status(401)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Alfredo Homem de Ouro\",\n    \"birthdate\": \"1963-10-10\",\n    \"city\": \"São Paulo\",\n    \"federal_state\": \"SP\",\n    \"job\": \"Cientista da Computação\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/users/2",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Decode Correto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Decode -> Correct\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/user_by_token",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"user_by_token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Course Add Correto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add Course -> Correct\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "json_args",
							"value": "\"{\\\"name\\\": \\\"Curso 1\\\", \\\"expires_at\\\": \\\"4040-12-05\\\", \\\"price\\\": 199.90, \\\"is_watchable\\\": true}\"",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Course Add Incorreto",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add Course -> Incorrect\", function() {\r",
							"    pm.response.to.have.status(500)\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "json_args",
							"value": "\"{\\\"nome\\\": \\\"Curso 1\\\", \\\"expires-at\\\": \\\"4040-12-05\\\", \\\"price\\\": 199.90, \\\"is_watchable\\\": true}\"",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Course Add",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "json_args",
							"value": "\"{\\\"name\\\": \\\"Curso 2\\\", \\\"expires_at\\\": \\\"2020-12-05\\\", \\\"price\\\": 199.90, \\\"is_watchable\\\": false}\"",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all Courses -> Correct\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Check Courses\", function() {\r",
							"    console.log(pm.response.json());\r",
							"    pm.expect(pm.response.json().length).to.equal(2);\r",
							"    pm.expect(pm.response.json()[0].name).to.equal(\"Curso 1\");\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Active Courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all Active Courses -> Correct\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Check Courses\", function() {\r",
							"    pm.expect(pm.response.json().length).to.equal(1);\r",
							"    pm.expect(pm.response.json()[0].name).to.equal(\"Curso 1\");\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/active",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"active"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Expired Courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all Expired Courses -> Correct\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Check Courses\", function() {\r",
							"    pm.expect(pm.response.json().length).to.equal(1);\r",
							"    pm.expect(pm.response.json()[0].name).to.equal(\"Curso 2\");\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/expired",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"expired"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Courses by Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Courses By Search -> Correct\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Check Courses\", function() {\r",
							"    pm.expect(pm.response.json().name).to.equal(\"Curso 2\");\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/2",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get First Course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get First Course -> Correct\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Check Course\", function() {\r",
							"    pm.expect(pm.response.json().name).to.equal(\"Curso 1\");\r",
							"    pm.expect(pm.response.json().price).to.be.a(\"Number\");\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/1",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get MissingCourse",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Course -> Inorrect\", function() {\r",
							"    pm.response.to.have.status(404)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/3",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change First Course Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Change First Course -> Correct\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Check Course\", function() {\r",
							"    pm.expect(pm.response.json().name).to.equal(\"Curso 1 Renomeado\");\r",
							"    pm.expect(pm.response.json().price).to.be.a(\"Number\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "json_args",
							"value": "\"{\\\"name\\\": \\\"Curso 1 Renomeado\\\"}\"",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/1",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Course Incorrect",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Course -> Incorrect\", function() {\r",
							"    pm.response.to.have.status(500)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"nome\": \"Curso 1 Renomeado\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/1",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Course Correct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete Second Course -> Correct\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/2",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Not Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"email\": \"not@admin.com\",\r\n\"password\": \"notadmin\",\r\n\"password_confirm\": \"notadmin\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/register",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Re Log In Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"email\": \"getren.xp@gmail.com\",\r\n\"password\": \"1234567890\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/login",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Another User Courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Another User Courses -> Correct\", function() {\r",
							"    pm.response.to.have.status(401);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/users/2/courses",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"users",
						"2",
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post User Course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Post User Course -> Correct\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"course_id\": 1,\r\n\"is_paid\": false}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/users/1/courses",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"users",
						"1",
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post User Course Incorrect",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Post User Course -> Incorrect\", function() {\r",
							"    pm.response.to.have.status(500);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"course_id\": 5,\r\n\"is_paid\": false}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/users/1/courses",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"users",
						"1",
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get User Courses -> Correct\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Check Courses\", function() {\r",
							"    pm.expect(pm.response.json()[0].name).to.equal(\"Curso 1 Renomeado\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/users/1/courses",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"users",
						"1",
						"courses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Video Incorrect",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get User Courses -> Correct\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/5/videos",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"5",
						"videos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Video Correct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Post Video -> Correct\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"youtube_code\": \"1\",\r\n\"title\": \"Vídeo Getren\",\r\n\"description\": \"Vídeo de teste para o getren\",\r\n\"thumbnail\": \"url.com\",\r\n\"duration\": \"14:32\",\r\n\"course_order\": 1}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/1/videos",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"1",
						"videos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Video Incorrect",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Post Videos -> Incorrect\", function() {\r",
							"    pm.response.to.have.status(500);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"code\": \"2\",\r\n\"order\": 2}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/1/videos",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"1",
						"videos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post New Video (No File)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"title\": \"title\",\r\n\"description\": \"description\",\r\n\"course_order\": 1,\r\n\"duration\": \"15:51\",\r\n\"thumbnail\": \"image.url\",\r\n\"youtube_code\": \"123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/1/videos",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"1",
						"videos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Videos From Course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Video from Course -> Correct\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Check Videos\", function() {\r",
							"    pm.expect(pm.response.json().length).to.equal(2);\r",
							"    pm.expect(pm.response.json()[0].youtube_code).to.equal(\"1\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/courses/1/videos",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"courses",
						"1",
						"videos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout\", function() {\r",
							"    pm.expect(pm.cookies.user_token).to.equal(undefined)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/logout",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Decode Sem Usuário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Decode -> Incorrect\", function() {\r",
							"    pm.response.to.have.status(400)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/user_by_token",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"user_by_token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Clear Database",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/erase_db",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"erase_db"
					]
				}
			},
			"response": []
		}
	]
}